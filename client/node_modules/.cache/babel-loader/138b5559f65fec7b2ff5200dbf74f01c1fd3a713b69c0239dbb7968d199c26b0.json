{"ast":null,"code":"var _jsxFileName = \"/Users/erikadavid/Desktop/MERN-toDoApp/client/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  useEffect(() => {\n    const getTodos = async () => {\n      try {\n        const res = await fetch(\"http://localhost:5000/api/todos\");\n        if (!res.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const todos = await res.json();\n        console.log(todos);\n      } catch (error) {\n        console.error(\"Error fetching todos:\", error);\n      }\n    };\n    getTodos();\n  }, []);\n\n  //keeping the dependency array empty means it's only going to run one time. \n  //we only want to get our todos one time. \n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello World!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","jsxDEV","_jsxDEV","App","_s","getTodos","res","fetch","ok","Error","todos","json","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/erikadavid/Desktop/MERN-toDoApp/client/src/App.jsx"],"sourcesContent":["import { useEffect } from \"react\";\n\nfunction App() {\n\n  useEffect(() => {\n    const getTodos = async () => {\n      try {\n        const res = await fetch(\"http://localhost:5000/api/todos\");\n        if (!res.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const todos = await res.json();\n        console.log(todos);\n      } catch (error) {\n        console.error(\"Error fetching todos:\", error);\n      }\n    };\n  \n    getTodos();\n  }, []);\n  \n  //keeping the dependency array empty means it's only going to run one time. \n  //we only want to get our todos one time. \n\n  return (\n    <main className=\"container\">\n      <h1>Hello World!</h1>\n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEbJ,SAAS,CAAC,MAAM;IACd,MAAMK,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;QAC1D,IAAI,CAACD,GAAG,CAACE,EAAE,EAAE;UACX,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,KAAK,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;QAC9BC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;MACpB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDT,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;;EAEA,oBACEH,OAAA;IAAMa,SAAS,EAAC,WAAW;IAAAC,QAAA,eACzBd,OAAA;MAAAc,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEX;AAAChB,EAAA,CA3BQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}