{"ast":null,"code":"var _jsxFileName = \"/Users/erikadavid/Desktop/MERN-toDoApp/client/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [content, setContent] = useState(\"\");\n  useEffect(() => {\n    async function getTodos() {\n      try {\n        const res = await fetch(\"/api/todos\");\n        if (!res.ok) {\n          throw new Error(`HTTP error! Status: ${res.status}`);\n        }\n        const todos = await res.json();\n        setTodos(todos);\n      } catch (error) {\n        console.error(\"Error fetching todos:\", error);\n      }\n    }\n    getTodos();\n  }, []);\n  const createNewTodo = async e => {\n    e.preventDefault();\n  };\n\n  //keeping the dependency array empty means it's only going to run one time. \n  //we only want to get our todos one time. \n\n  //pre tag instead of div makes the JSON data easier to read, better formatted.\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To-do App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: createNewTodo,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: content,\n        onChange: e => setContent(e.target.value),\n        placeholder: \"Enter a new todo\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: todos.length > 0 && todos.map(todo => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: todo.todo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: todo.status ? \"☑\" : \"☐\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, todo._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"znq5taD1vvqjqT8r2k3ZJiIwbQk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","App","_s","todos","setTodos","content","setContent","getTodos","res","fetch","ok","Error","status","json","error","console","createNewTodo","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","length","map","todo","_id","_c","$RefreshReg$"],"sources":["/Users/erikadavid/Desktop/MERN-toDoApp/client/src/App.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction App() {\n\n  const [todos, setTodos] = useState([]);\n  const [content, setContent] = useState(\"\");\n\n  useEffect(() => {\n    async function getTodos() {\n      try {\n         const res = await fetch(\"/api/todos\");\n   \n         if (!res.ok) {\n            throw new Error(`HTTP error! Status: ${res.status}`);\n         }\n   \n         const todos = await res.json();\n         setTodos(todos);\n      } catch (error) {\n         console.error(\"Error fetching todos:\", error);\n      }\n   }   \n    getTodos();\n  }, []);\n  \n  const createNewTodo = async (e) => {\n    e.preventDefault();\n    \n  }\n  \n  //keeping the dependency array empty means it's only going to run one time. \n  //we only want to get our todos one time. \n\n  //pre tag instead of div makes the JSON data easier to read, better formatted.\n\n  return (\n    <main className=\"container\">\n      <h1>To-do App</h1>\n      <form onSubmit={createNewTodo}>\n        <input\n        type=\"text\"\n        value={content}\n        onChange={(e) => setContent(e.target.value)}\n        placeholder=\"Enter a new todo\"\n        required\n        />\n        <button type=\"submit\">Create todo</button>\n      </form>\n      <div>\n        {(todos.length > 0) && \n          todos.map((todo) => {\n            return(\n              <div key={todo._id}>\n                <p>{todo.todo}</p>\n              <div>\n                <button>\n                  {(todo.status ? \"☑\" : \"☐\")}\n                </button>\n              </div>\n            </div>\n            )\n          })\n        }\n      </div>\n      \n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}